TODO:
(str 'hello ?name') -name=fredrik
str 'hello ?name' > ~/hello
~/hello -name='fredrik'
url ~/hello ;; request https://tastic.com/tasitc/api/url -post=?[0] > /tasitc/std/url (alias /tasitc/std/*)
/openweather ;; request "https://api.openweathermap.com/data/2.5/weather\?q=?city"
/openweather | $.temperature ;;json/filter temperature eq $[temperature] eq $['temperature']
html div 'foo' | $('div') ;;html/filter 'div'

url.tasitc.js ( (args, tasitc, env) => {
  const url = tasitc.config.host + path.resolve(env.cwd, args[0])
  return url
})

url.tasitc.highlight ;; TODO

url.tasitc.completion ( (ast, symbol, history) => {
  return //???history(ast.value.symbol).sortBy(l => l.userUsed).sortBy(l => l.popularity)
})

url.tasitc.docs ( (ast) => {
  return TASITC.docs(ast, {
    summary:
    examples: [
      {},
      {}
    ]
  })
})

SKRIV EN artikkel om hva som lagres og hva som er på klienten, hva som må ha passphrase.


Busy, busy all the time?
  (screencast)
  1. html (div )

Dig in
1. html

1.1 Hello You

1.1 html "hello you"


1.2 Basics

1.2 html "hi'ya" > ~/hi-ya

1.2 url ~/hi-ya

1.2 html "hi ?name" > ~/hi

1.2 html (div ".Msg" "hi ?name") > ~/hi

1.2 ~/hi -name="fredrik"

1.2 url (~/hi -name="fredrik")


1.3 /openweather

1.3 docs /openweather

1.3 /openweather -city='stockholm,sweden' -metric | $.temperature ;;TODO: append | head?

1.3 alias /openweather weather

1.3 weather -city='stockholm,sweden' -metric | $.temperature > ~/tourist-info/stockholm-temperature

1.3 weather -metric | $.temperature > ~/tourist-info/temperature

1.3 rm ~/tourist-info/stockholm-temperature

1.4 html (div str ('stockholm,sweden' ~/tourist-info/temperature -city='stockholm,sweden']) > ~/tourist-info/city

1.4 html (ul (['stockholm,sweden' 'london,uk'] | a { href: path [(url ~/turist-info) $] } | li)) > ~/tourist-info

1.4 ['stockholm,sweden' 'london,uk'] > ~/tourist-info/cities

1.4 goto ~/tourist-info ;;or cd ~/tourist-info

1.4 html (ul (./cities | a { href: path (url . -city=$) } | li)) > ./list

1.4 html (div str (?city ./temperature)) > ./city

1.4 match [
  ?city && (contains cities ?city) => ./city -city=?city
  ?city => not-found
  true => ./list
] > ~/tourist-info
;;
match [
  {foo: ?test1, zoo: ?test2} => str ?test1 ?test2
]
;;
1.4 ~/tourist-info -css=('ul { list-style: none; }')  > ~/tourist-info

1.4 ~/tourist-info | $('body') | html $ (js "console.log('js', $('body'));")  > ~/tourist-info

1.4 ~/tourist-info -js=/jquery/js > ~/tourist-info

1.4 publish ~/tourist-info

;;move out of basics!

1.4 html 'no worries, it is not published yet' > ~/tourist-info

1.4 666 >  ~/tourist-info/temperature ;;not published but

1.4 ~/tourist-info ;;seems to be wrong...
;;change what is below:
;;1.4 diff ~1 ~/tourist-info | diff/apply > ~/tourist-info

;;1.4 html 'I really want this' ~/tourist-info

;;1.4 publish ~/tourist-info

;;1.4 diff ~1 ~/tourist-info | diff/apply > ~/tourist-info ;;but now I regret

;;1.4 publish ~/tourist-info


1.5 docs /bootstrap

1.5 inspect /bootstrap/css

1.5 logs ~/tourist-info

1.5 callback ~/mycb (account 'google' {token: ?token})

1.5 ...

1.6 spa

2: Accounts

In addition to [request, callback, html, js, css] accounts is core of

2 /github
/github/get master HEAD freekh/bar/foo
/github/put master freekh/bar/foo 'foo'
/github/list master HEAD freekh/bar | str freekh/bar | /github/get | store ~/$.name $.content  > /github/sync ;;TODO: diff first?

2 /google/drive

2 /psql

2 /heroku

2 /aws

2 /markdown

2 /

3 cookies, login
